schema: "1"
id: template-deploy
metadata:
  description: Deploy to account template
  name: deploy to account
  owner: ashaikh@starbucks.com
  scopes: 
    - global
protect: false
configuration:
  concurrentExecutions:
    limitConcurrent: true
  triggers:
  - account: dockerhub
    enabled: true
    name: dockertrigger
    organization: 
    registry: s00502nacrc3po.azurecr.io
    repository: azure-vote-front
    type: docker
variables:
- name: deployAccount
  description: The account where the application will be deployed to
  defaultValue: C3PO-AKS-WESTUS-DEV
- name: deployStack
  description: The stack to deploy to
  defaultValue: dev
- name: deployTag
  description: The tag of the docker image to deploy
  example: Pick from blue, orange, purple, red, or white
  defaultValue: purple
stages:
- config:
    clusters:
    - account: "{{ deployAccount }}"
      application: "{{ application }}"
      cloudProvider: kubernetes
      containers:
      - args: []
        command: []
        envFrom: []
        envVars: []
        imageDescription:
          account: dockerhub
          imageId: "s00502nacrc3po.azurecr.io/azure-vote-front:{{ deployTag }}"
          registry: s00502nacrc3po.azurecr.io
          repository: azure-vote-front
          tag: "{{ deployTag }}"
        imagePullPolicy: ALWAYS
        limits: {}
        name: spinnaker-workshop-demo
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          handler:
            execAction:
              commands: []
            httpGetAction:
              path: /
              port: 80
              uriScheme: HTTP
            tcpSocketAction:
              port: 80
            type: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        requests: {}
        volumeMounts: []
      dnsPolicy: ClusterFirst
      events: []
      initContainers: []
      interestingHealthProviderNames:
      - KubernetesContainer
      - KubernetesPod
      loadBalancers:
      - "{{ application }}-{{ deployStack }}"
      namespace: default
      nodeSelector: {}
      podAnnotations: {}
      provider: kubernetes
      region: default
      replicaSetAnnotations: {}
      securityGroups: []
      stack: "{{ deployStack }}"
      strategy: highlander
      targetSize: 1
      terminationGracePeriodSeconds: 30
      tolerations: []
      volumeSources: []
  id: deploy1
  inheritanceControl: {}
  inject: {}
  name: Deploy
  type: deploy
